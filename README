OCaml API for Binary Ninja (Work in Progress) : Only tested on Linux.

Currently exposed enough bindings to implement the breakpoint plugin
for Binary Ninja.

Uses the core API of Binary Ninja - NOT the higher level C++ API. Uses
ocaml-ctypes stub generation to generate the bindings.

Requires Oasis for build system (for now) and of-course a copy of
Binary Ninja, and the binaryninja-api repository (master branch). 

Note that you need a commercial version (not the
personal version) to be able to run plugins in headless mode.

The example builds a plugin to be loaded into the Binary Ninja plugins
directory (~/.binaryninja/plugins)

Plugins:
An example plugin is in example.

This builds a Binary Ninja plugin registering a core_init_plugin in
the OCaml function and then spits out a C file to allow Binary
Ninja to load the plugin via CoreInitPlugin

The module in GeneratePlugin generates the C file and also registers
the OCaml callback.

(Note to self: this is a bit of a hack, I tried using
ocaml-ctypes-inverted to generate the C but this raised exceptions, so
using the Callback.register method for now)